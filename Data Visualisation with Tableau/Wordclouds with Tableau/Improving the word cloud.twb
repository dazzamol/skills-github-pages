<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0125.1454                               -->
<workbook original-version='18.1' source-build='2018.3.3 (20183.19.0125.1454)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='words to be excluded' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='22'>
        <calculation class='tableau' formula='22' />
        <range max='100' min='0' />
      </column>
    </datasource>
    <datasource caption='test' inline='true' name='federated.09fu86p0vzbryz1g5u6t801fpetf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='test' name='textscan.13or92x0sb4s1f1g5qdk307cpxbo'>
            <connection class='textscan' directory='/Users/French/Desktop' filename='test.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.13or92x0sb4s1f1g5qdk307cpxbo' name='test.csv' table='[test#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Words' ordinal='0' />
            <column datatype='integer' name='Count' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[test.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Words</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Words]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Words</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count]</local-name>
            <parent-name>[test.csv]</parent-name>
            <remote-alias>Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.483444' measure-ordering='alphabetic' measure-percentage='0.516556' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='stopwords (test)' inline='true' name='federated.1m744fc1fmm6za19srw3g1be6xsx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='test' name='excel-direct.01trruw0tum8il15qklyp0w3pn39'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/French/Desktop/test.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.01trruw0tum8il15qklyp0w3pn39' name='stopwords' table='[stopwords$]' type='table'>
          <columns gridOrigin='A1:B101:no:A1:B101:0' header='yes' outcome='2'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='Words' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[stopwords]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Words</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Words]</local-name>
            <parent-name>[stopwords]</parent-name>
            <remote-alias>Words</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[stopwords]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B101:no:A1:B101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.465517' measure-ordering='alphabetic' measure-percentage='0.324138' parameter-percentage='0.210345' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='test' name='federated.09fu86p0vzbryz1g5u6t801fpetf' />
            <datasource caption='stopwords (test)' name='federated.1m744fc1fmm6za19srw3g1be6xsx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='words to be excluded' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='22'>
              <calculation class='tableau' formula='22' />
              <range max='100' min='0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.09fu86p0vzbryz1g5u6t801fpetf'>
            <column datatype='integer' name='[Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Words]' role='dimension' type='nominal' />
            <column-instance column='[Count]' derivation='None' name='[none:Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Words]' derivation='None' name='[none:Words:nk]' pivot='key' type='nominal' />
            <column-instance column='[Count]' derivation='Sum' name='[sum:Count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1m744fc1fmm6za19srw3g1be6xsx'>
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Words]' role='dimension' type='nominal' />
            <column-instance column='[Words]' derivation='None' name='[none:Words:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.09fu86p0vzbryz1g5u6t801fpetf].[none:Count:qk]' included-values='in-range'>
            <min>7</min>
          </filter>
          <filter class='categorical' column='[federated.1m744fc1fmm6za19srw3g1be6xsx].[none:Words:nk]'>
            <groupfilter expression='MIN([Rank])&gt;[Parameters].[Parameter 1]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Words:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09fu86p0vzbryz1g5u6t801fpetf].[none:Count:qk]</column>
            <column>[federated.1m744fc1fmm6za19srw3g1be6xsx].[none:Words:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.09fu86p0vzbryz1g5u6t801fpetf].[sum:Count:qk]' num-steps='9' palette='red_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.09fu86p0vzbryz1g5u6t801fpetf].[sum:Count:qk]' />
              <size column='[federated.09fu86p0vzbryz1g5u6t801fpetf].[sum:Count:qk]' />
              <text column='[federated.09fu86p0vzbryz1g5u6t801fpetf].[none:Words:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='48'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.09fu86p0vzbryz1g5u6t801fpetf].[none:Count:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.09fu86p0vzbryz1g5u6t801fpetf].[:Measure Names]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.09fu86p0vzbryz1g5u6t801fpetf].[none:Words:nk]</field>
                  <field>[federated.09fu86p0vzbryz1g5u6t801fpetf].[sum:Count:qk]</field>
                  <field>[federated.09fu86p0vzbryz1g5u6t801fpetf].[:Measure Names]</field>
                  <field>[federated.09fu86p0vzbryz1g5u6t801fpetf].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;thresholding&quot;</value>
                <value>7</value>
                <value>&quot;[Parameters].[Parameter 1]&quot;</value>
                <value>1.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.09fu86p0vzbryz1g5u6t801fpetf].[none:Count:qk]</field>
            <field>[federated.09fu86p0vzbryz1g5u6t801fpetf].[none:Words:nk]</field>
            <field>[federated.09fu86p0vzbryz1g5u6t801fpetf].[sum:Count:qk]</field>
            <field>[federated.1m744fc1fmm6za19srw3g1be6xsx].[none:Words:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED3AE507-5CA6-473F-A588-7AB1096680B2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
